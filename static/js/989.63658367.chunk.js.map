{"version":3,"file":"static/js/989.63658367.chunk.js","mappings":"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","sources":["routes.js","components/AppBreadcrumb.js","components/AppContent.js","components/AppFooter.js","components/header/AppHeaderDropdown.js","components/AppHeader.js","components/AppSidebarNav.js","_nav.js","components/AppSidebar.js","layout/DefaultLayout.js"],"sourcesContent":["import { element } from \"prop-types\";\nimport React from \"react\";\n\nconst Dashboard = React.lazy(() => import(\"./views/dashboard/Dashboard\"));\n// const Colors = React.lazy(() => import('./views/theme/colors/Colors'))\n// const Typography = React.lazy(() => import('./views/theme/typography/Typography'))\n\n// Base\n// const Accordion = React.lazy(() => import('./views/base/accordion/Accordion'))\n// const Breadcrumbs = React.lazy(() => import('./views/base/breadcrumbs/Breadcrumbs'))\n// const Cards = React.lazy(() => import('./views/base/cards/Cards'))\n// const Carousels = React.lazy(() => import('./views/base/carousels/Carousels'))\n// const Collapses = React.lazy(() => import('./views/base/collapses/Collapses'))\n// const ListGroups = React.lazy(() => import('./views/base/list-groups/ListGroups'))\n// const Navs = React.lazy(() => import('./views/base/navs/Navs'))\n// const Paginations = React.lazy(() => import('./views/base/paginations/Paginations'))\n// const Placeholders = React.lazy(() => import('./views/base/placeholders/Placeholders'))\n// const Popovers = React.lazy(() => import('./views/base/popovers/Popovers'))\n// const Progress = React.lazy(() => import('./views/base/progress/Progress'))\n// const Spinners = React.lazy(() => import('./views/base/spinners/Spinners'))\n// const Tables = React.lazy(() => import('./views/base/tables/Tables'))\n// const Tooltips = React.lazy(() => import('./views/base/tooltips/Tooltips'))\n\n// Buttons\n// const Buttons = React.lazy(() => import('./views/buttons/buttons/Buttons'))\n// const ButtonGroups = React.lazy(() => import('./views/buttons/button-groups/ButtonGroups'))\n// const Dropdowns = React.lazy(() => import('./views/buttons/dropdowns/Dropdowns'))\n\n//Forms\n// const ChecksRadios = React.lazy(() => import('./views/forms/checks-radios/ChecksRadios'))\n// const FloatingLabels = React.lazy(() => import('./views/forms/floating-labels/FloatingLabels'))\n// const FormControl = React.lazy(() => import('./views/forms/form-control/FormControl'))\n// const InputGroup = React.lazy(() => import('./views/forms/input-group/InputGroup'))\n// const Layout = React.lazy(() => import('./views/forms/layout/Layout'))\n// const Range = React.lazy(() => import('./views/forms/range/Range'))\n// const Select = React.lazy(() => import('./views/forms/select/Select'))\n// const Validation = React.lazy(() => import('./views/forms/validation/Validation'))\n\n// const Charts = React.lazy(() => import('./views/charts/Charts'))\n\n// Icons\n// const CoreUIIcons = React.lazy(() => import('./views/icons/coreui-icons/CoreUIIcons'))\n// const Flags = React.lazy(() => import('./views/icons/flags/Flags'))\n// const Brands = React.lazy(() => import('./views/icons/brands/Brands'))\n\n// Notifications\n// const Alerts = React.lazy(() => import('./views/notifications/alerts/Alerts'))\n// const Badges = React.lazy(() => import('./views/notifications/badges/Badges'))\n// const Modals = React.lazy(() => import('./views/notifications/modals/Modals'))\n// const Toasts = React.lazy(() => import('./views/notifications/toasts/Toasts'))\n\n// const Widgets = React.lazy(() => import('./views/widgets/Widgets'))\n\nconst Offices = React.lazy(() => import(\"./views/offices/Office\"));\nconst Staff = React.lazy(() => import(\"./views/staff/Staff\"));\nconst Center = React.lazy(() => import(\"./views/centers/Center\"));\nconst Member = React.lazy(() => import(\"./views/members/Member\"));\n\nconst routes = [\n  { path: \"/\", exact: true, name: \"Home\" },\n  { path: \"/dashboard\", name: \"Dashboard\", element: Dashboard },\n\n  { path: \"/details\", name: \"Details\", element: Offices, exact: true },\n  { path: \"/details/offices\", name: \"Office\", element: Offices },\n  { path: \"/details/staff\", name: \"Staff\", element: Staff },\n  { path: \"/details/centers\", name: \"Centers\", element: Center },\n  { path: \"/details/members\", name: \"Members\", element: Member },\n];\n\nexport default routes;\n","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nimport routes from \"../routes\";\n\nimport { CBreadcrumb, CBreadcrumbItem } from \"@coreui/react\";\n\nconst AppBreadcrumb = () => {\n  const currentLocation = useLocation().pathname;\n\n  const getRouteName = (pathname, routes) => {\n    const currentRoute = routes.find((route) => route.path === pathname);\n    return currentRoute ? currentRoute.name : false;\n  };\n\n  const getBreadcrumbs = (location) => {\n    const breadcrumbs = [];\n    location.split(\"/\").reduce((prev, curr, index, array) => {\n      const currentPathname = `${prev}/${curr}`;\n      const routeName = getRouteName(currentPathname, routes);\n      routeName &&\n        breadcrumbs.push({\n          pathname: currentPathname,\n          name: routeName,\n          active: index + 1 === array.length ? true : false,\n        });\n      return currentPathname;\n    });\n    return breadcrumbs;\n  };\n\n  const breadcrumbs = getBreadcrumbs(currentLocation);\n\n  return (\n    <CBreadcrumb className=\"m-0 ms-2\">\n      <CBreadcrumbItem href=\"/\">Home</CBreadcrumbItem>\n      {breadcrumbs.map((breadcrumb, index) => {\n        return (\n          <CBreadcrumbItem\n            {...(breadcrumb.active\n              ? { active: true }\n              : { href: breadcrumb.pathname })}\n            key={index}\n          >\n            {breadcrumb.name}\n          </CBreadcrumbItem>\n        );\n      })}\n    </CBreadcrumb>\n  );\n};\n\nexport default React.memo(AppBreadcrumb);\n","import React, { Suspense } from 'react'\nimport { Navigate, Route, Routes } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n\nconst AppContent = () => {\n  return (\n    <CContainer lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Routes>\n          {routes.map((route, idx) => {\n            return (\n              route.element && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  element={<route.element />}\n                />\n              )\n            )\n          })}\n          <Route path=\"/\" element={<Navigate to=\"dashboard\" replace />} />\n        </Routes>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst AppFooter = () => {\n  return (\n    <CFooter>\n      {/* <div>\n        <a href=\"https://coreui.io\" target=\"_blank\" rel=\"noopener noreferrer\">\n          CoreUI\n        </a>\n        <span className=\"ms-1\">&copy; 2022 creativeLabs.</span>\n      </div>\n      <div className=\"ms-auto\">\n        <span className=\"me-1\">Powered by</span>\n        <a href=\"https://coreui.io/react\" target=\"_blank\" rel=\"noopener noreferrer\">\n          CoreUI React Admin &amp; Dashboard Template\n        </a>\n      </div> */}\n    </CFooter>\n  )\n}\n\nexport default React.memo(AppFooter)\n","import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  CAvatar,\n  CBadge,\n  CDropdown,\n  CDropdownDivider,\n  CDropdownHeader,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n} from \"@coreui/react\";\nimport {\n  cilBell,\n  cilCreditCard,\n  cilCommentSquare,\n  cilEnvelopeOpen,\n  cilFile,\n  cilLockLocked,\n  cilSettings,\n  cilTask,\n  cilUser,\n} from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\n\nimport avatar9 from \"./../../assets/images/avatars/9.jpg\";\n\nconst AppHeaderDropdown = () => {\n  const navigate = useNavigate();\n\n  const handleLogout = (log) => {\n    localStorage.removeItem(\"fincoLoginDetails\");\n    navigate(\"/fincolive\");\n  };\n\n  return (\n    <CDropdown variant=\"nav-item\">\n      <CDropdownToggle placement=\"bottom-end\" className=\"py-0\" caret={false}>\n        <CAvatar src={avatar9} size=\"md\" />\n      </CDropdownToggle>\n\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n        <CDropdownHeader className=\"bg-light fw-semibold py-2\">\n          Account\n        </CDropdownHeader>\n        {/* <CDropdownItem href=\"#\">\n          <CIcon icon={cilBell} className=\"me-2\" />\n          Updates\n          <CBadge color=\"info\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilEnvelopeOpen} className=\"me-2\" />\n          Messages\n          <CBadge color=\"success\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilTask} className=\"me-2\" />\n          Tasks\n          <CBadge color=\"danger\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilCommentSquare} className=\"me-2\" />\n          Comments\n          <CBadge color=\"warning\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownHeader className=\"bg-light fw-semibold py-2\">Settings</CDropdownHeader>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilUser} className=\"me-2\" />\n          Profile\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilSettings} className=\"me-2\" />\n          Settings\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilCreditCard} className=\"me-2\" />\n          Payments\n          <CBadge color=\"secondary\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilFile} className=\"me-2\" />\n          Projects\n          <CBadge color=\"primary\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownDivider /> */}\n\n        <CDropdownItem\n          href=\"#\"\n          onClick={(e) => {\n            e.preventDefault();\n            handleLogout(true);\n          }}\n        >\n          <CIcon icon={cilLockLocked} className=\"me-2\" />\n          Logout\n        </CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  );\n};\n\nexport default AppHeaderDropdown;\n","import React, { useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  CContainer,\n  CHeader,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n  CFormSelect,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport { cilMenu } from \"@coreui/icons\";\nimport { AppBreadcrumb } from \"./index\";\nimport { AppHeaderDropdown } from \"./header/index\";\n\nconst AppHeader = () => {\n  const [items, setItems] = useState([]);\n  const [selected, setSelected] = useState({ id: \"\", name: \"\" });\n  const dispatch = useDispatch();\n  const sidebarShow = useSelector((state) => state.sidebarShow);\n  const states = useSelector((state) => state);\n\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(\"fincoLoginDetails\"));\n    if (data) {\n      setItems({ ...data });\n      setSelected({\n        id: data.detail.officeList[0].id,\n        name: data.detail.officeList[0].name,\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    dispatch({ type: \"setOfficeDetails\", selected });\n  }, [selected]);\n\n  const handleDropDown = (e) => {\n    // console.log(e.target.selectedOptions[0].label)  //return the txt of selected option\n    const id = e.target.value.split(\"!!\")[0];\n    const name = e.target.value.split(\"!!\")[1];\n    setSelected({ ...selected, id, name });\n  };\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4\">\n      <CContainer fluid>\n        <CHeaderNav className=\"d-none d-md-flex\">\n          <CHeaderToggler\n            className=\"ps-1\"\n            onClick={() => dispatch({ type: \"set\", sidebarShow: !sidebarShow })}\n          >\n            <CIcon icon={cilMenu} size=\"lg\" />\n          </CHeaderToggler>\n\n          <CNavLink to=\"/dashboard\" component={NavLink}>\n            Dashboard\n          </CNavLink>\n          <CNavItem></CNavItem>\n        </CHeaderNav>\n\n        <CHeaderNav>\n          <CFormSelect size=\"md\" onChange={handleDropDown}>\n            {items.token &&\n              items.detail.officeList.map((element) => {\n                const { id, name } = element;\n                return (\n                  <option value={`${id}!!${name}`} key={id}>\n                    {name}\n                  </option>\n                );\n              })}\n          </CFormSelect>\n        </CHeaderNav>\n\n        <CHeaderNav className=\"ms-3\">\n          <AppHeaderDropdown />\n        </CHeaderNav>\n      </CContainer>\n      <CHeaderDivider />\n      <CContainer fluid>\n        <AppBreadcrumb />\n      </CContainer>\n    </CHeader>\n  );\n};\n\nexport default AppHeader;\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import React from \"react\";\nimport CIcon from \"@coreui/icons-react\";\nimport {\n  cilBell,\n  cilCalculator,\n  cilChartPie,\n  cilCursor,\n  cilDrop,\n  cilNotes,\n  cilPencil,\n  cilPuzzle,\n  cilSpeedometer,\n  cilStar,\n  cilLibraryBuilding,\n  cilUser,\n  cilCircle,\n  cibWireguard,\n  cilBlind,\n} from \"@coreui/icons\";\nimport { CNavGroup, CNavItem, CNavTitle } from \"@coreui/react\";\n\nconst _nav = [\n  {\n    component: CNavItem,\n    name: \"Dashboard\",\n    to: \"/dashboard\",\n    icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n    badge: {\n      color: \"info\",\n      text: \"NEW\",\n    },\n  },\n\n  {\n    component: CNavTitle,\n    name: \"Details\",\n  },\n  {\n    component: CNavItem,\n    name: \"Offices\",\n    to: \"/details/offices\",\n    icon: <CIcon icon={cilLibraryBuilding} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: \"Staff\",\n    to: \"/details/staff\",\n    icon: <CIcon icon={cilUser} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: \"Centers\",\n    to: \"/details/centers\",\n    icon: <CIcon icon={cibWireguard} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: \"Members\",\n    to: \"/details/members\",\n    icon: <CIcon icon={cilBlind} customClassName=\"nav-icon\" />,\n  },\n];\n\nexport default _nav;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  CSidebar,\n  CSidebarBrand,\n  CSidebarNav,\n  CSidebarToggler,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\n\nimport { AppSidebarNav } from \"./AppSidebarNav\";\n\n// import { logoNegative } from 'src/assets/brand/logo-negative'\nimport { sygnet } from \"src/assets/brand/sygnet\";\nimport fincologo from \"./fincologo.png\";\nimport SimpleBar from \"simplebar-react\";\nimport \"simplebar/dist/simplebar.min.css\";\n// sidebar nav config\nimport navigation from \"../_nav\";\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch();\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable);\n  const sidebarShow = useSelector((state) => state.sidebarShow);\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: \"set\", sidebarShow: visible });\n      }}\n    >\n      <CSidebarBrand className=\"d-none d-md-flex\" to=\"/\">\n        {unfoldable ? <h5 className=\"\">FINCO</h5> : <h1>FINCO</h1>}\n        <CIcon className=\"sidebar-brand-narrow\" icon={sygnet} height={35} />\n      </CSidebarBrand>\n\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={navigation} />\n        </SimpleBar>\n      </CSidebarNav>\n\n      <CSidebarToggler\n        className=\"d-none d-lg-flex\"\n        onClick={() =>\n          dispatch({ type: \"set\", sidebarUnfoldable: !unfoldable })\n        }\n      />\n    </CSidebar>\n  );\n};\n\nexport default React.memo(AppSidebar);\n","import React from \"react\";\nimport {\n  AppContent,\n  AppSidebar,\n  AppFooter,\n  AppHeader,\n} from \"../components/index\";\n\nconst DefaultLayout = () => {\n  return (\n    <div>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n          <AppContent />\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  );\n};\n\nexport default DefaultLayout;\n"],"names":["Dashboard","React","Offices","path","exact","name","element","AppBreadcrumb","currentLocation","useLocation","pathname","breadcrumbs","location","split","reduce","prev","curr","index","array","currentPathname","routeName","routes","currentRoute","find","route","getRouteName","push","active","length","getBreadcrumbs","className","href","map","breadcrumb","key","AppContent","lg","Suspense","fallback","color","idx","to","replace","AppFooter","navigate","useNavigate","variant","placement","caret","src","avatar9","size","onClick","e","preventDefault","localStorage","removeItem","icon","cilLockLocked","useState","items","setItems","id","selected","setSelected","dispatch","useDispatch","sidebarShow","useSelector","state","useEffect","data","JSON","parse","getItem","detail","officeList","type","position","fluid","cilMenu","component","NavLink","onChange","target","value","token","AppSidebarNav","navLink","badge","text","navItem","item","rest","Component","navGroup","String","toggler","visible","startsWith","CNavItem","cilSpeedometer","customClassName","CNavTitle","cilLibraryBuilding","cilUser","cibWireguard","cilBlind","AppSidebar","unfoldable","sidebarUnfoldable","onVisibleChange","sygnet","height","navigation"],"sourceRoot":""}